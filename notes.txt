Why using the matlab code produces a different result:
------------------------------------------------------

Using the same parameters than the one from the papers this code produces 
a result that is often 0.3 to 0.5dB below what the matlab code (pre-compiled 
so we will never know what's inside for sure) provided by the original author.
 We investigated that to understand what was going on by playing with the
 parameters in the matlab code: setting a very large step allows to understand
 what is going on with the patch search. 

Our conclusions are the following:
1- The first match is not chosen with respect to the distance. Instead it seems
 to be always on the bondary of the search region. We think that this trick has
 been done to try to maximize the search window. This is probably also the case 
for the rest of the predictive search (this is an hypothesis but we didn't craft
 an experiment to verify that).
2- When searching patches only in a single image and allowing to keep one more 
patches (meaning that the special patch mentioned in the previous point is
 discarded at the end) than necessary the patches chosen by the two codes are 
exactly the same. We checked that both codes produce the same result in this case.
3- By creating a video with the same frame but translated each time we saw 
that the Npr is not used in the matlab code. Instead Ns is used both for the 
initial search and the predictive searches contrary to what's said in the article.
 While it's hard to reproduce exactly the same result as the matlab code (because 
of the unknown rule used for 1-), we checked that using Npr of 7 with our code 
leads to similar PSNR results.
